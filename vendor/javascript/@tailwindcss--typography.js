// @tailwindcss/typography@0.5.16 downloaded from https://ga.jspm.io/npm:@tailwindcss/typography@0.5.16/src/index.js

import*as e from"tailwindcss/plugin";import*as t from"lodash.merge";import*as r from"lodash.castarray";import s from"./styles.js";import*as a from"lodash.isplainobject";import*as o from"postcss-selector-parser";import"tailwindcss/colors";var i=a;try{"default"in a&&(i=a.default)}catch(e){}var n=o;try{"default"in o&&(n=o.default)}catch(e){}var c={};const l=i;const f=n;const m=f();c={isUsableColor(e,t){return l(t)&&e!=="gray"&&t[600]},
/**
   * @param {string} selector
   */
commonTrailingPseudos(e){let t=m.astSync(e);
/** @type {import('postcss-selector-parser').Pseudo[][]} */let r=[];for(let[e,s]of t.nodes.entries())for(const[t,a]of[...s.nodes].reverse().entries()){if(a.type!=="pseudo"||!a.value.startsWith("::"))break;r[t]=r[t]||[];r[t][e]=a}let s=f.selector();for(const e of r){if(!e)continue;let t=new Set(e.map((e=>e.value)));if(t.size>1)break;e.forEach((e=>e.remove()));s.prepend(e[0])}return s.nodes.length?[s.toString(),t.toString()]:[null,e]}};var d=c;var h=e;try{"default"in e&&(h=e.default)}catch(e){}var p=t;try{"default"in t&&(p=t.default)}catch(e){}var u=r;try{"default"in r&&(u=r.default)}catch(e){}var g={};const y=h;const $=p;const b=u;const v=s;const{commonTrailingPseudos:j}=d;const O={};function inWhere(e,{className:t,modifier:r,prefix:s}){let a=s(`.not-${t}`).slice(1);let o=e.startsWith(">")?(r==="DEFAULT"?`.${t}`:`.${t}-${r}`)+" ":"";let[i,n]=j(e);return i?`:where(${o}${n}):not(:where([class~="${a}"],[class~="${a}"] *))${i}`:`:where(${o}${e}):not(:where([class~="${a}"],[class~="${a}"] *))`}function isObject(e){return typeof e==="object"&&e!==null}function configToCss(e={},{target:t,className:r,modifier:s,prefix:a}){function updateSelector(e,o){if(t==="legacy")return[e,o];if(Array.isArray(o))return[e,o];if(isObject(o)){let t=Object.values(o).some(isObject);return t?[inWhere(e,{className:r,modifier:s,prefix:a}),o,Object.fromEntries(Object.entries(o).map((([e,t])=>updateSelector(e,t))))]:[inWhere(e,{className:r,modifier:s,prefix:a}),o]}return[e,o]}return Object.fromEntries(Object.entries($({},...Object.keys(e).filter((e=>O[e])).map((t=>O[t](e[t]))),...b(e.css||{}))).map((([e,t])=>updateSelector(e,t))))}g=y.withOptions((({className:e="prose",target:t="modern"}={})=>function({addVariant:r,addComponents:s,theme:a,prefix:o}){let i=a("typography");let n={className:e,prefix:o};for(let[s,...a]of[["headings","h1","h2","h3","h4","h5","h6","th"],["h1"],["h2"],["h3"],["h4"],["h5"],["h6"],["p"],["a"],["blockquote"],["figure"],["figcaption"],["strong"],["em"],["kbd"],["code"],["pre"],["ol"],["ul"],["li"],["table"],["thead"],["tr"],["th"],["td"],["img"],["video"],["hr"],["lead",'[class~="lead"]']]){a=a.length===0?[s]:a;let o=t==="legacy"?a.map((e=>`& ${e}`)):a.join(", ");r(`${e}-${s}`,t==="legacy"?o:`& :is(${inWhere(o,n)})`)}s(Object.keys(i).map((r=>({[r==="DEFAULT"?`.${e}`:`.${e}-${r}`]:configToCss(i[r],{target:t,className:e,modifier:r,prefix:o})}))))}),(()=>({theme:{typography:v}})));var w=g;export{w as default};

